{"name": "test_e2e", "status": "broken", "statusDetails": {"message": "AttributeError: 'ConfirmPage' object has no attribute 'get_screenshot_as_png'", "trace": "self = <tests.test_e2e.TestOne object at 0x0000020159EE2610>\n\n    @allure.description(\"E2E flow of Buying\")\n    @allure.severity(severity_level=\"HIGH\")\n    def test_e2e(self):       ### need to pass the fixture method as argument\n        log = self.getLog()         ### calling and mapping the LOG here which is there in the BaseClass\n        homepage = HomePage(self.driver)  ### assigning an OBJECT to the class created in POM pages(heres, Homepage)\n        homepage.shopItems().click()  ### with the newly created object, I am calling the method which is having the XPATH for the same\n    \n        checkoutpage = CheckoutPage(self.driver)\n        products = checkoutpage.getProducts()\n    \n        i = -1\n        for product in products:\n            i = i + 1\n            product_brand = product.text\n            print(product_brand)\n            log.info(product_brand) ## we can use log instead of Print\n            if product_brand == \"Nokia Edge\":\n                checkoutpage.getAdd()[i].click()\n    \n        checkoutpage.checkout1().click()\n        assert checkoutpage.getProdlist().text == 'Nokia Edge'\n        # print(\"Product is same between Add and Checkout page\")\n        log.info(\"Product is same between Add and Checkout page\")  ## we can use log instead of Print\n    \n        checkoutpage.checkout2().click()\n    \n        confirmpage = ConfirmPage(self.driver)\n        log.info(\"Enter the value as Ind\")\n        confirmpage.getCountry().send_keys(\"Ind\")\n    \n        # wait = WebDriverWait(self.driver, 7)\n        # wait.until(expected_conditions.presence_of_element_located((By.LINK_TEXT, \"India\")))\n        self.verifyLinkPresence(\"India\")  ### calling the method from BaseClass where explicit wait is given with argument as text\n        confirmpage.selectCountry().click()\n    \n        confirmpage.selectCheckbox().click()\n        confirmpage.purchaseButton().click()\n        success_msg = confirmpage.success_MSG().text\n        assert \"Success!\" in success_msg\n        # assert \"Hello!\" in success_msg ## to check allure screenshot functionality\n        # if AssertionError:\n>       allure.attach(confirmpage.get_screenshot_as_png(), name=\"Error SS\", attachment_type=allure.attachment_type.PNG)\nE       AttributeError: 'ConfirmPage' object has no attribute 'get_screenshot_as_png'\n\ntests\\test_e2e.py:56: AttributeError"}, "description": "E2E flow of Buying", "attachments": [{"name": "log", "source": "10bbaf41-6859-4f30-8647-f07891f95f22-attachment.txt", "type": "text/plain"}], "start": 1627641647896, "stop": 1627641654658, "uuid": "0de1720a-489d-44a5-918c-f0b55ee58b12", "historyId": "90cceb4ea355426326076baff37c6dd6", "testCaseId": "ae038d837b9d6df85d3f0fb900bba974", "fullName": "tests.test_e2e.TestOne#test_e2e", "labels": [{"name": "severity", "value": "HIGH"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_e2e"}, {"name": "subSuite", "value": "TestOne"}, {"name": "host", "value": "Gaurab-ROG"}, {"name": "thread", "value": "8944-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_e2e"}]}